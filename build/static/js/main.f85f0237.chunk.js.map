{"version":3,"sources":["components/Form.js","components/TableField.js","components/Table.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","title","setTitle","author","setAuthor","isbn","setIsbn","currentBookId","handlSubmit","cancelEdit","onSubmit","autoFocus","required","type","value","onChange","e","target","tabIndex","onClick","TableField","fieldName","settingsField","removeBook","editBook","className","Table","books","map","book","bookTitle","bookAuthor","bookIsbn","bookId","App","useState","setCurrentBookId","uuidv4","setBooks","clearInputs","preventDefault","trim","id","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f85f0237.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = (props) => {\r\n    const{title,\r\n        setTitle,\r\n        author,\r\n        setAuthor,\r\n        isbn,\r\n        setIsbn,\r\n        currentBookId,\r\n        handlSubmit,\r\n        cancelEdit,\r\n    } = props;\r\n    \r\n    return(\r\n        <form onSubmit={handlSubmit}>\r\n            <label>Title</label>\r\n            <input \r\n            autoFocus\r\n            required\r\n            type=\"text\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n            <label>Author</label>\r\n            <input \r\n            required\r\n            type=\"text\"\r\n            value={author}\r\n            onChange={(e) => setAuthor(e.target.value)} />\r\n            <label>ISBN#</label>\r\n            <input \r\n            required\r\n            type=\"text\" \r\n            value={isbn}\r\n            onChange={(e) => setIsbn(e.target.value)} \r\n            />\r\n            <button tabIndex=\"0\" type=\"submit\">{currentBookId !== null ? \"Update\" : \"Add\"}</button>\r\n            {currentBookId !== null && <button onClick={cancelEdit}>Cancel</button>}\r\n        </form>\r\n    );\r\n};\r\nexport default Form;","import React from 'react'; \r\n\r\nconst TableField = ({fieldName,settingsField,removeBook,editBook}) => {\r\n    return(\r\n        <div className=\"tablefield\">\r\n            {fieldName}\r\n            {settingsField &&\r\n            <>\r\n\r\n             <i onClick={editBook} className=\"fas fa-edit\"></i>\r\n             <i onClick={removeBook} className=\"fas fa-dumpster\"></i>\r\n            </>\r\n            }\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default TableField;","import React from 'react';\r\nimport TableField from './TableField';\r\n\r\nconst Table = ({books,removeBook,editBook}) => {\r\n    return(\r\n        <div className=\"table\">\r\n            <div className = \"tableHeading\">\r\n            <TableField fieldName=\"Title\" />\r\n            <TableField fieldName=\"Author\" />\r\n            <TableField fieldName=\"ISBN#\" />\r\n            <TableField fieldName=\"Settings\" />\r\n            </div>\r\n            {books.map(book => (\r\n                <div key={book.bookId} className=\"tableRow\">\r\n                   <TableField fieldName={book.bookTitle}/> \r\n                   <TableField  fieldName={book.bookAuthor}/>\r\n                   <TableField  fieldName={book.bookIsbn}/>\r\n                   <TableField settingsField \r\n                   removeBook={() => removeBook(book.bookId)}\r\n                   editBook={() => editBook(book)}\r\n                   />\r\n                    </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Table;","import React ,{useState} from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Form from './components/Form';\nimport Table from './components/Table';\nimport './App.css';\n\nconst App = () => {\n  const [title,setTitle] = useState('');\n  const[author,setAuthor] = useState('');\n  const[isbn,setIsbn] = useState('');\n  const[currentBookId,setCurrentBookId] = useState(null);\n  const[books, setBooks]= useState([\n    {\n    bookTitle: \"Book1\",\n    bookAuthor: \"Ananya Trivedi\",\n    bookIsbn: \"9999\",\n    bookId:uuidv4()\n\n    }]);\n    const isInputInvalid = () => {\n      return title.trim() == \"\" || author.trim() === \"\" || isbn.trim() ===\"\" ;\n      \n    }\n    const clearInputs = () => {\n      setTitle('');\n      setAuthor('');\n      setIsbn('');\n    }\n    const addBook = () => {\n           setBooks([...books,\n          {\n            bookTitle: title,\n            bookAuthor: author,\n            bookIsbn: isbn,\n            bookId: uuidv4(),\n          },\n          \n          ]);\n    };\n\n    const editBook = (book) => {\n        setTitle(book.bookTitle);\n        setAuthor(book.bookAuthor);\n        setIsbn(book.bookIsbn);\n        setCurrentBookId(book.bookId);\n    };\n    const updateBook = () => {\n      setBooks(books.map(book =>book.bookId === currentBookId ? {...books,bookTitle: title,bookAuthor: author,bookIsbn: isbn} : book))\n    }\n\n\n  const handlSubmit = e => {\n      e.preventDefault();\n      clearInputs();\n      if(isInputInvalid()) return;\n      !currentBookId ? addBook() : updateBook();\n     \n    };\n    const removeBook = (id) => {\n      setBooks(books.filter(book => book.bookId !== id));\n    }\n    const cancelEdit = () =>{\n      clearInputs();\n      setCurrentBookId(null);\n    }\n\n  return (\n    <div className=\"App\">\n     <div className=\"container\">\n       <Form \n       title={title}\n       setTitle={setTitle}\n       author={author}\n       setAuthor={setAuthor}\n       isbn={isbn}\n       setIsbn={setIsbn}\n       currentBookId={currentBookId}\n      handlSubmit={handlSubmit}\n      cancelEdit={cancelEdit}\n       />\n       <Table \n       books={books}\n       removeBook={removeBook}\n       editBook={editBook}/>\n     </div>\n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}